#! /usr/bin/env ruby
# Get the total count and list of PagerDuty Users
# Email to IT Procurement
# This is for auditing / accounting of invoicing

# This file is managed by Chef in the base::pagerduty_user_report recipe
# This script's home is https://git.nexus.commercehub.com/pipeline/pagerduty_users

require 'httparty'
#require 'pp'
require 'net/smtp'

uri = URI('<%= @uri %>?limit=100')
#uri = 'https://commercehub.pagerduty.com/api/v1/users'

api_key = '<%= @api_key %>'
token_string = "Token token=#{api_key}"

response = HTTParty.get(
	uri,
	headers: {
			'Content-Type' => 'application/json', 'Authorization' => token_string
		}
)

data = JSON.parse(response.body)
#pp data

# puts "Total Users: #{data['total']}"

users = data['users']
#puts users
people = []
users.each do |u|
	people << u['name']# and puts u['name']
end

people = people.join("\n")

message = <<MSG_END
From: <%= @smtp_from_address %>
TO: <%= @smtp_to_address %>
Subject: Monthly PagerDuty User Report

There are currently #{data['total']} PagerDuty Users.

The current PagerDuty User List is:
#{people}

MSG_END

Net::SMTP.start('<%= @smtp_server %>') do |smtp|
	smtp.send_message message,	'<%= @smtp_from_address %>',
								'<%= @smtp_to_address %>'
end