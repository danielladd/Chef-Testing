# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure("2") do |config|
	config.vm.box = "precise64"
	config.vm.box_url = "http://files.vagrantup.com/precise64.box"
#	config.vm.provider :virtualbox do |vb|
#		vb.customize ["modifyvm", :id, "--memory", 512]
#	end

	if Vagrant.has_plugin?("vagrant-cachier")
		config.cache.scope = :box
		config.cache.auto_detect = true
	end

	config.hostmanager.enabled = true
	config.hostmanager.manage_host = true
	config.hostmanager.ignore_private_ip = false
	config.hostmanager.include_offline = true

	config.vm.define "box1" do |box1|
		box1.vm.hostname = "web1"
		box1.vm.network :forwarded_port, guest: 80, host: 8080
		box1.hostmanager.aliases = %w( web corpsite styleguide )

		box1.omnibus.chef_version = :latest
#		If using the Omnibus plugin, don't use the install_chef.sh script
#		The downside is that the Omnibus plugin does not cache downloading the
#		installer.
#		box1.vm.provision :shell, :path => "./install_chef.sh"
		box1.vm.provision "chef_solo" do |chef|
			chef.cookbooks_path = "./cookbooks"
			chef.roles_path = "./roles"
# 			####################################################################
#			# In chef you can check for Vagrantness with:
#			#	 if node[:instance_role] == 'vagrant'
#			#		# do something that should only be done inside
#			#		# a Vagrant box
#			#	 end
# 			####################################################################
			chef.json = {
				'instance_role' => 'vagrant'
			}
			chef.add_role("base")
			chef.add_recipe 'git'
			chef.add_recipe 'chub_nginx::styleguide'
		end
	end

end
