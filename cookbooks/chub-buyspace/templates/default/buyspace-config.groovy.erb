//Please try to keep this file in order.  
//The choice is to use chain brackets and to try 
//to maintain the config in alpha order

klerk {
    url = "<%= node['chub-buyspace']['klerk']['url'] %>"
}

sprite {
    conductorApiUrl = '<%= node['chub-buyspace']['sprite']['conductorApiUrl'] %>'
    outputContainerPrefix = '<%= node['chub-buyspace']['sprite']['outputContainerPrefix'] %>'
    imageUrlTemplate = '<%= node['chub-buyspace']['sprite']['imageUrlTemplate'] %>'
    productImageSpriteManifestWritingEnabled = '<%= node['chub-buyspace']['sprite']['productImageSpriteManifestWritingEnabled'] %>'
    pendingSpriteManifestPostingEnabled = '<%= node['chub-buyspace']['sprite']['pendingSpriteManifestPostingEnabled'] %>'
}

channelProductExporter {
    imageUrlStrategy {
        type = 'sprite'
        accessKey = '<%= node['chub-buyspace']['channelProductExporter']['imageUrlStrategy']['accessKey'] %>' 
        secretKey = '<%= node['chub-buyspace']['channelProductExporter']['imageUrlStrategy']['secretKey'] %>'
        bucketName = '<%= node['chub-buyspace']['channelProductExporter']['imageUrlStrategy']['bucketName'] %>' 
        keyTemplate = '<%= node['chub-buyspace']['channelProductExporter']['imageUrlStrategy']['keyTemplate'] %>'
    }
}

imageUploading {
     amazon {
          accessKey = '<%= node['chub-buyspace']['imageUploading']['amazon']['accessKey'] %>'
          secretKey = '<%= node['chub-buyspace']['imageUploading']['amazon']['secretKey'] %>'
          bucket = '<%= node['chub-buyspace']['imageUploading']['amazon']['bucket'] %>'
     }
}

salesforce {
    url = '<%= node['chub-buyspace']['salesforce']['url'] %>'
    apiUrl = "<%= node['chub-buyspace']['salesforce']['apiUrl'] %>"
    clientId = '<%= node['chub-buyspace']['salesforce']['clientId'] %>'
    clientSecret = '<%= node['chub-buyspace']['salesforce']['clientSecret'] %>'
    httpClient{
        connectionsPerRoute = <%= node['chub-buyspace']['salesforce']['httpClient']['connectionsPerRoute'] %>
        totalConnections = <%= node['chub-buyspace']['salesforce']['httpClient']['totalConnections'] %>
    }
    password = '<%= node['chub-buyspace']['salesforce']['password'] %>'
    tokenUrl = '<%= node['chub-buyspace']['salesforce']['tokenUrl'] %>'
    username = '<%= node['chub-buyspace']['salesforce']['username'] %>'
}

vertx{
	enabled = <%= node['chub-buyspace']['vertx']['enabled'] %>
	hazelcastConfigFile = '<%= node['chub-buyspace']['vertx']['hazelcastConfigFile'] %>'
	hostname = '<%= node['chub-buyspace']['vertx']['hostname'] %>'
	port = <%= node['chub-buyspace']['vertx']['port'] %>
}

msExchangeApi {
    url = "<%= node['chub-buyspace']['msExchangeApi']['url'] %>"
    credentials {
        username = '<%= node['chub-buyspace']['msExchangeApi']['credentials']['username'] %>'
        password = '<%= node['chub-buyspace']['msExchangeApi']['credentials']['password'] %>'
        domain = 'nexus'
    }
}

hornetq {
	host = '<%= node['chub-buyspace']['hornetq']['host'] %>'
	port = <%= node['chub-buyspace']['hornetq']['port'] %>
}

mongo{
	databaseName = "<%= node['chub-buyspace']['mongo']['databaseName'] %>"
	replicas = <%= node['chub-buyspace']['mongo']['replicas'] %>
    blobStore {
	   databaseName = "<%= node['chub-buyspace']['mongo']['blobstoreDatabaseName'] %>"
	   replicas =  <%= node['chub-buyspace']['mongo']['blobstoreReplicas'] %>
    }
}
       
images{
	graphicsMagickHome= "<%= node['chub-buyspace']['images']['graphicsMagickHome'] %>"
	baseDirectory= "<%= node['chub-buyspace']['images']['baseDirectory'] %>"
	productBaseDirectory="<%= node['chub-buyspace']['images']['productBaseDirectory'] %>"
	serverUrls= <%= node['chub-buyspace']['images']['serverUrls'] %>
	datastoreDirectories = "<%= node['chub-buyspace']['images']['datastoreDirectories'] %>"
	productImageAttachmentStrategy = "<%= node['chub-buyspace']['images']['productImageAttachmentStrategy'] %>"
}
                
solr {
	url = '<%= node['chub-buyspace']['solr']['url'] %>'
}

grails {
	serverURL="<%= node['chub-buyspace']['grails']['serverURL'] %>"
	//serverURL="<%= node['chub-buyspace']['grails']['serverURLbyHostname'] %>"
	apiServerURL="<%= node['chub-buyspace']['grails']['apiServerURL'] %>"
	plugin{
		excludes = <%= node['chub-buyspace']['grails']['plugin']['excludes'] %>
	}
}

paymentStrategy = 'mock'
creSecure{
    baseFormBuilderUrl = "<%= node['chub-buyspace']['grails']['serverURL'] %>/cre/form.gsp"
}

taskScheduler.enabled=<%= node['chub-buyspace']['taskScheduler']['enabled'] %>

dateConfig {
    enabled = true
    // default to current time
    offsetMillis = 0 // 1000L/*millis*/ * 60L /*seconds*/ * 60L /*minutes*/ * 24L /*hours*/ * 90L /*days*/
}

log4j = {
	appenders {
      rollingFile name: 'file', maxFileSize: '5MB', file: "<%= node['chub-buyspace']['log_dir'] %>/buyspace-app.log", maxBackupIndex: 75
      //rollingFile name: 'permissionsFile', maxFileSize: '2MB', file: "<%= node['chub-buyspace']['log_dir'] %>", maxBackupIndex: 75
      'null' name: 'stacktrace'
	}

    info 'org.springframework.integration',
            'org.hornetq',
            'grails.app.services.marketplace.SalesforceService'
    error file: 'marketplace.ShiroMongoDBRealm'

	error 'org.codehaus.groovy.grails.web.servlet',  //  controllers
			'org.codehaus.groovy.grails.web.pages', //  GSP
			'org.codehaus.groovy.grails.web.sitemesh', //  layouts
			'org.codehaus.groovy.grails."web.mapping.filter', // URL mapping
			'org.codehaus.groovy.grails."web.mapping', // URL mapping
			'org.codehaus.groovy.grails.commons', // core / classloading
			'org.codehaus.groovy.grails.plugins', // plugins
			'org.codehaus.groovy.grails.orm.hibernate', // hibernate integration
			'org.springframework',
			'org.hibernate',
			'org.codehaus.groovy.grails.web.binding',
			'net.sf.ehcache.hibernate',
			'org.codehaus.groovy.grails.web.binding.GrailsDataBinder',
			'org.springframework.security',
			'com.mongodb',
			'com.google.code',
			'org.apache.solr',
			'grails.app.services.marketplace.digest.MapReduceService'

	debug 'grails.app.services.marketplace',
            'grails.app.services.productstream',
            'grails.app.controllers.marketplace.ChannelController'
				
	root {
		<%= node['chub-buyspace']['log4j']['root_loglevel'] %> 'file'
		additivity = true
	}
}

antivirus{
	hosts = <%= node['chub-buyspace']['antivirus']['hosts'] %>
	enabled= <%= node['chub-buyspace']['antivirus']['enabled'] %>
	port = <%= node['chub-buyspace']['antivirus']['port'] %>
}

bestbuy {
    ingestor {
        username = 'chub.test1'
        password = 'test'
        url = 'http://54.208.33.194/ingest-service/service'
    }
}