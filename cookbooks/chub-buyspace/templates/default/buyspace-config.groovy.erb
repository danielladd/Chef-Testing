import groovy.time.TimeCategory 

webServerUrl = "<%= node['chub-buyspace']['webServerUrl'] %>"

klerk {
    url = "<%= node['chub-buyspace']['klerk']['url'] %>"
}

sprite {
    conductorApiUrl = '<%= node['chub-buyspace']['sprite']['conductorApiUrl'] %>'
    outputContainerPrefix = '<%= node['chub-buyspace']['sprite']['outputContainerPrefix'] %>'
    imageUrlTemplate = '<%= node['chub-buyspace']['sprite']['imageUrlTemplate'] %>'
    productImageSpriteManifestWritingEnabled = '<%= node['chub-buyspace']['sprite']['productImageSpriteManifestWritingEnabled'] %>'
    pendingSpriteManifestPostingEnabled = '<%= node['chub-buyspace']['sprite']['pendingSpriteManifestPostingEnabled'] %>'
}

channelProductExporter {
    imageUrlStrategy {
        type = 'sprite'
        accessKey = '<%= node['chub-buyspace']['channelProductExporter']['imageUrlStrategy']['accessKey'] %>' 
        secretKey = '<%= node['chub-buyspace']['channelProductExporter']['imageUrlStrategy']['secretKey'] %>'
        bucketName = '<%= node['chub-buyspace']['channelProductExporter']['imageUrlStrategy']['bucketName'] %>' 
        keyTemplate = '<%= node['chub-buyspace']['channelProductExporter']['imageUrlStrategy']['keyTemplate'] %>'
        use(groovy.time.TimeCategory) {
             artifactUrlDuration = 1.day
        }
    }
}

imageUploading {
     amazon {
          accessKey = '<%= node['chub-buyspace']['imageUploading']['amazon']['accessKey'] %>'
          secretKey = '<%= node['chub-buyspace']['imageUploading']['amazon']['secretKey'] %>'
          bucket = '<%= node['chub-buyspace']['imageUploading']['amazon']['bucket'] %>'
     }
}

useGoogleAnalytics=false
useHubSpot=false
marketplace.gitRevision = System.currentTimeMillis()
adminEmailAddress='lrotter@commercehub.com'
paymentFailureEmailAddress='paymentissues@buyspace.com'
creSecure.cardTokenValidationUrl='https://sandbox.cresecure.net/direct/services/validation'

marketplace.files.commerceHubRelationshipsFile="/marketplace/rels.csv"
bestBuyMarketplace.retailerId ='51247477c519e3a71e639634'

salesforce {
    url = '<%= node['chub-buyspace']['salesforce']['url'] %>'
    apiUrl = "<%= node['chub-buyspace']['salesforce']['apiUrl'] %>"
    clientId = '<%= node['chub-buyspace']['salesforce']['clientId'] %>'
    clientSecret = '<%= node['chub-buyspace']['salesforce']['clientSecret'] %>'
    httpClient{
        connectionsPerRoute = <%= node['chub-buyspace']['salesforce']['httpClient']['connectionsPerRoute'] %>
        totalConnections = <%= node['chub-buyspace']['salesforce']['httpClient']['totalConnections'] %>
    }
    password = '<%= node['chub-buyspace']['salesforce']['password'] %>'
    tokenUrl = '<%= node['chub-buyspace']['salesforce']['tokenUrl'] %>'
    username = '<%= node['chub-buyspace']['salesforce']['username'] %>'
}

vertx {
    enabled = <%= node['chub-buyspace']['vertx']['enabled'] %>
    hazelcastConfigFile = '<%= node['chub-buyspace']['vertx']['hazelcastConfigFile'] %>'
    hostname = '<%= node['chub-buyspace']['vertx']['hostname'] %>'
    port = <%= node['chub-buyspace']['vertx']['port'] %>
}

msExchangeApi {
    overrideAddress='<%= node['chub-buyspace']['msExchangeApi']['overrideAddress'] %>' 
    url = "<%= node['chub-buyspace']['msExchangeApi']['url'] %>"
    credentials {
        username = '<%= node['chub-buyspace']['msExchangeApi']['credentials']['username'] %>'
        password = '<%= node['chub-buyspace']['msExchangeApi']['credentials']['password'] %>'
        domain = 'nexus'
    }
}

hornetq {
    host = '<%= node['chub-buyspace']['hornetq']['host'] %>'
    port = <%= node['chub-buyspace']['hornetq']['port'] %>
    embedded=false
}

mongo {
    databaseName = '<%= node['chub-buyspace']['mongo']['databaseName'] %>'
    replicas = <%= node['chub-buyspace']['mongo']['replicas'] %>
    blobStore {
       databaseName = '<%= node['chub-buyspace']['mongo']['blobstoreDatabaseName'] %>'
       replicas =  <%= node['chub-buyspace']['mongo']['blobstoreReplicas'] %>
    }
}
 
images {
    graphicsMagickHome= "<%= node['chub-buyspace']['images']['graphicsMagickHome'] %>"
    baseDirectory= "<%= node['chub-buyspace']['images']['baseDirectory'] %>"
    productBaseDirectory="<%= node['chub-buyspace']['images']['productBaseDirectory'] %>"
    serverUrls= ['<%= node['chub-buyspace']['images']['serverUrls'] %>']
    datastoreDirectories = [<%= node['chub-buyspace']['images']['datastoreDirectories'] %>]
    productImageAttachmentStrategy = "<%= node['chub-buyspace']['images']['productImageAttachmentStrategy'] %>"
}
                
solr {
    url = '<%= node['chub-buyspace']['solr']['url'] %>'
}

grails {
  <% if node['chub-buyspace']['role']['isApi'] -%>
    serverURL="<%= node['chub-buyspace']['grails']['apiServerURL'] %>"
  <% else -%>
    serverURL="<%= node['chub-buyspace']['grails']['serverURL'] %>"
  <% end -%>
    apiServerURL="<%= node['chub-buyspace']['grails']['apiServerURL'] %>"
    plugin{
        excludes = <%= node['chub-buyspace']['grails']['plugin']['excludes'] %>
    }
}

paymentStrategy = 'mock'
creSecure{
    baseFormBuilderUrl = "<%= node['chub-buyspace']['grails']['serverURL'] %>/cre/form.gsp"
}

taskScheduler.enabled=<%= node['chub-buyspace']['taskScheduler']['enabled'] %>

dateConfig {
    enabled = true
    offsetMillis = 0 
}

marketplace.logUsernames = true

log4j = {
    appenders {
        rollingFile name: 'file', maxFileSize: '5MB', file: "<%= node['chub-buyspace']['log_dir'] %>/buyspace-app.log", maxBackupIndex: 75
        'null' name: 'stacktrace'
        appender new com.ryantenney.log4j.RedisAppender(
                name: 'logstash',
                layout: new com.commercehub.logging.log4j.LogstashEventLayout(userFields:'env:mpqa1,app:marketplace'),
                host: 'mplogs01.nexus.commercehub.com',
                key: 'logstash',
                alwaysBatch: false,
                threshold: org.apache.log4j.Level.WARN
        )
    }

    debug 'org.springframework.integration',
            'org.hornetq',
            'grails.app.services.marketplace.SalesforceService'

    error 'org.codehaus.groovy.grails.web.servlet',  //  controllers
            'org.codehaus.groovy.grails.web.pages', //  GSP
            'org.codehaus.groovy.grails.web.sitemesh', //  layouts
            'org.codehaus.groovy.grails."web.mapping.filter', // URL mapping
            'org.codehaus.groovy.grails."web.mapping', // URL mapping
            'org.codehaus.groovy.grails.commons', // core / classloading
            'org.codehaus.groovy.grails.plugins', // plugins
            'org.codehaus.groovy.grails.orm.hibernate', // hibernate integration
            'org.springframework',
            'org.hibernate',
            'org.codehaus.groovy.grails.web.binding',
            'net.sf.ehcache.hibernate',
            'org.codehaus.groovy.grails.web.binding.GrailsDataBinder',
            'org.springframework.security',
            'com.mongodb',
            'com.google.code',
            'org.apache.solr',
            'grails.app.services.marketplace.digest.MapReduceService'

    trace 'marketplace.salesforce.http.SalesforceResponseHandler',
            'marketplace.salesforce.http.SalesforceRequest'


    root {
        <%= node['chub-buyspace']['log4j']['root_loglevel'] %> 'file'
        additivity = true
    }
}


antivirus{
    hosts = <%= node['chub-buyspace']['antivirus']['hosts'] %>
    enabled= <%= node['chub-buyspace']['antivirus']['enabled'] %>
    port = <%= node['chub-buyspace']['antivirus']['port'] %>
}

bestbuy {
    ingestor {
        username = 'chub.test1'
        password = 'test'
        url = 'http://54.208.33.194/ingest-service/service'
    }
}

beans{
    shiroSecurityManager{
        rememberMeManager = null
    }
}