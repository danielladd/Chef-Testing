import groovy.time.TimeCategory

webServerUrl = "<%= node['chub-buyspace']['webServerUrl'] %>"

security {
    shiro.authc.required = <%= node['chub-buyspace']['security']['shiro']['authc']['required'] %>
    shiro.realm = "<%= node['chub-buyspace']['security']['shiro']['realm'] %>"
    shiro {
        cas {
            serverUrl = "<%= node['chub-buyspace']['security']['shiro']['cas']['serverUrl'] %>"
            serviceUrl = "<%= node['chub-buyspace']['security']['shiro']['cas']['serviceUrl'] %>"
            failureUrl = "<%= node['chub-buyspace']['security']['shiro']['cas']['failureUrl'] %>"
        }
    }
}

census {
    url = "<%= node['chub-buyspace']['census']['url'] %>"
    buyspaceAndProductStreamApplicationId = "<%= node['chub-buyspace']['census']['buyspaceAndProductStreamApplicationId'] %>"
}

plaza {
    url = "<%= node['chub-buyspace']['plaza']['url'] %>"
}

vault {
    url = "<%= node['chub-buyspace']['vault']['url'] %>"
}

klerk {
    url = '<%= node['chub-buyspace']['klerk']['url'] %>'
}

sprite {
    conductorApiUrl = '<%= node['chub-buyspace']['sprite']['conductorApiUrl'] %>'
    outputContainerPrefix = '<%= node['chub-buyspace']['sprite']['outputContainerPrefix'] %>'
    imageUrlTemplate = '<%= node['chub-buyspace']['sprite']['imageUrlTemplate'] %>'
    productImageSpriteManifestWritingEnabled = <%= node['chub-buyspace']['sprite']['productImageSpriteManifestWritingEnabled'] %>
    pendingSpriteManifestPostingEnabled = <%= node['chub-buyspace']['sprite']['pendingSpriteManifestPostingEnabled'] %>
}

channelProductExporter {
    imageUrlStrategy {
        type = 'sprite'
        accessKey = '<%= node['chub-buyspace']['channelProductExporter']['imageUrlStrategy']['accessKey'] %>' 
        secretKey = '<%= node['chub-buyspace']['channelProductExporter']['imageUrlStrategy']['secretKey'] %>'
        bucketName = '<%= node['chub-buyspace']['channelProductExporter']['imageUrlStrategy']['bucketName'] %>' 
        keyTemplate = '<%= node['chub-buyspace']['channelProductExporter']['imageUrlStrategy']['keyTemplate'] %>'
        use(groovy.time.TimeCategory) {
             artifactUrlDuration = <%= node['chub-buyspace']['channelProductExporter']['imageUrlStrategy']['artifactUrlDuration'] %>
        }
    }
}

imageUploading {
     amazon {
          accessKey = '<%= node['chub-buyspace']['imageUploading']['amazon']['accessKey'] %>'
          secretKey = '<%= node['chub-buyspace']['imageUploading']['amazon']['secretKey'] %>'
          bucket = '<%= node['chub-buyspace']['imageUploading']['amazon']['bucket'] %>'
          use(TimeCategory) {
            uploadedFileUrlDuration = 1.days
          }
     }
}

useGoogleAnalytics = <%= node['chub-buyspace']['useGoogleAnalytics'] %>
useHubSpot = <%= node['chub-buyspace']['useGoogleAnalytics'] %>

marketplace.gitRevision = System.currentTimeMillis()
adminEmailAddress = 'support@buyspace.com'
paymentFailureEmailAddress = 'paymentissues@buyspace.com'
creSecure.cardTokenValidationUrl = '<%= node['chub-buyspace']['creSecure']['cardTokenValidationUrl'] %>'

marketplace.files.commerceHubRelationshipsFile = "/marketplace/rels.csv"
bestBuyMarketplace.retailerId = '51247477c519e3a71e639634'

salesforce {
    url = '<%= node['chub-buyspace']['salesforce']['url'] %>'
    apiUrl = "<%= node['chub-buyspace']['salesforce']['apiUrl'] %>"
    clientId = '<%= node['chub-buyspace']['salesforce']['clientId'] %>'
    clientSecret = '<%= node['chub-buyspace']['salesforce']['clientSecret'] %>'
    httpClient {
        connectionsPerRoute = <%= node['chub-buyspace']['salesforce']['httpClient']['connectionsPerRoute'] %>
        totalConnections = <%= node['chub-buyspace']['salesforce']['httpClient']['totalConnections'] %>
    }
    password = '<%= node['chub-buyspace']['salesforce']['password'] %>'
    tokenUrl = '<%= node['chub-buyspace']['salesforce']['tokenUrl'] %>'
    username = '<%= node['chub-buyspace']['salesforce']['username'] %>'
}

vertx {
    enabled = <%= node['chub-buyspace']['vertx']['enabled'] %>
    hazelcastConfigFile = '<%= node['chub-buyspace']['vertx']['hazelcastConfigFile'] %>'
    hostname = '<%= node.name %>'
    port = <%= node['chub-buyspace']['vertx']['port'] %>
}

msExchangeApi {
    <% if node['chub-buyspace']['environment_level'] != 'production' -%>
       overrideAddress = '<%= node['chub-buyspace']['msExchangeApi']['overrideAddress'] %>'
    <% end -%>
    url = "<%= node['chub-buyspace']['msExchangeApi']['url'] %>"
    credentials {
        username = '<%= node['chub-buyspace']['msExchangeApi']['credentials']['username'] %>'
        password = '<%= node['chub-buyspace']['msExchangeApi']['credentials']['password'] %>'
        domain = 'nexus'
    }
}

hornetq {
    host = '<%= node['chub-buyspace']['hornetq']['host'] %>'
    port = <%= node['chub-buyspace']['hornetq']['port'] %>
    embedded = false
}

mongo {
    databaseName = "<%= node['chub-buyspace']['mongo']['databaseName'] %>"
    replicas = <%= node['chub-buyspace']['mongo']['replicas'] %>
    blobStore {
        databaseName = "<%= node['chub-buyspace']['mongo']['blobstoreDatabaseName'] %>"
        replicas = <%= node['chub-buyspace']['mongo']['blobstoreReplicas'] %>
    }
}

images {
    graphicsMagickHome = "<%= node['chub-buyspace']['images']['graphicsMagickHome'] %>"
    baseDirectory = "<%= node['chub-buyspace']['images']['baseDirectory'] %>"
    productBaseDirectory = "<%= node['chub-buyspace']['images']['productBaseDirectory'] %>"
    serverUrls = ['<%= node['chub-buyspace']['images']['serverUrls'] %>']
    datastoreDirectories = [<%= node['chub-buyspace']['images']['datastoreDirectories'] %>]
    productImageAttachmentStrategy = '<%= node['chub-buyspace']['images']['productImageAttachmentStrategy'] %>'
}

solr {
    url = '<%= node['chub-buyspace']['solr']['url'] %>'
}

grails {
  <% if node['chub-buyspace']['role']['isApi'] -%>
    serverURL = "<%= node['chub-buyspace']['grails']['apiServerURL'] %>"
  <% else -%>
    serverURL = "<%= node['chub-buyspace']['grails']['serverURL'] %>"
  <% end -%>
    apiServerURL = "<%= node['chub-buyspace']['grails']['apiServerURL'] %>"
    plugin {
        excludes = <%= node['chub-buyspace']['grails']['plugin']['excludes'] %>
    }
}

<% if node['chub-buyspace']['environment_level'] != 'production' -%>
paymentStrategy = 'mock'
creSecure {
    baseFormBuilderUrl = "<%= node['chub-buyspace']['grails']['serverURL'] %>/cre/form.gsp"
}
<% end -%>

taskScheduler.enabled = <%= node['chub-buyspace']['taskScheduler']['enabled'] %>

<% if node['chub-buyspace']['environment_level'] != 'production' -%>
dateConfig {
    enabled = true
    offsetMillis = 0
}
<% end -%>

marketplace.logUsernames = true

semantics3 {
    apiKey = '<%= node['chub-buyspace']['semantics3']['apiKey'] %>'
    apiSecret = '<%= node['chub-buyspace']['semantics3']['apiSecret'] %>'
}

<% if node['chub-buyspace']['environment_level'] == 'production' -%>
sugar {
    restUrl = "https://chub.sugarondemand.com/service/v2/rest.php"
    username = "frankpny"
    password = "f33df3aa9450daed583ce2756a5fc9f1"
    uiUrl = "https://chub.sugarondemand.com/index.php?action=DetailView&module=Accounts&record="
}
<% end -%>

log4j = {
    appenders {
        rollingFile name: 'file', maxFileSize: '2MB', file: "<%= node['chub-buyspace']['log_dir'] %>/buyspace-app.log", maxBackupIndex: 75
        'null' name: 'stacktrace'
        appender new com.commercehub.logging.log4j.redis.PooledRedisAppender(
            name: 'logstash',
            layout: new com.commercehub.logging.log4j.LogstashEventLayout(userFields: 'env:<%= node.chef_environment %>,app:marketplace'),
            host: '<%= node['chub-buyspace']['log4j']['redis_server_host'] %>',  
            key: 'logstash',
            alwaysBatch: false,
            threshold: org.apache.log4j.Level.WARN,
            jedisPoolConfig: new redis.clients.jedis.JedisPoolConfig(
              blockWhenExhausted:false,
              maxTotal: 10,
              minIdle: 1,
              maxIdle: 5,
              testOnBorrow: true,
              testOnReturn: true,
              testWhileIdle: true
            ))
    }

    info 'org.springframework.integration',
         'org.hornetq',
         'grails.app.controllers.marketplace.IntegrationAssistanceController',
         'grails.app.services.productstream.integration.etilize.EtilizeService',
         'grails.app.services.productstream.search.ChannelProductIndexingService',
         'grails.app.services.marketplace.SalesforceService',
         'marketplace.salesforce.http.SalesforceResponseHandler',
         'marketplace.salesforce.http.SalesforceRequest'

    error 'org.codehaus.groovy.grails.web.servlet',
          'org.codehaus.groovy.grails.web.pages',
          'org.codehaus.groovy.grails.web.sitemesh',
          'org.codehaus.groovy.grails.web.mapping.filter',
          'org.codehaus.groovy.grails.web.mapping',
          'org.codehaus.groovy.grails.commons',
          'org.codehaus.groovy.grails.plugins',
          'org.codehaus.groovy.grails.orm.hibernate',
          'org.springframework',
          'org.hibernate',
          'org.codehaus.groovy.grails.web.binding',
          'net.sf.ehcache.hibernate',
          'org.codehaus.groovy.grails.web.binding.GrailsDataBinder',
          'org.springframework.security',
          'com.mongodb',
          'com.google.code',
          'org.apache.solr',
          'grails.app.services.marketplace.digest.MapReduceService'

    root {
        <%= node['chub-buyspace']['log4j']['root_loglevel'] %> 'file', 'logstash'
        additivity = true
    }
}

antivirus {
    hosts = <%= node['chub-buyspace']['antivirus']['hosts'] %>
    enabled = <%= node['chub-buyspace']['antivirus']['enabled'] %>
    port = <%= node['chub-buyspace']['antivirus']['port'] %>
}

<% if node['chub-buyspace']['environment_level'] != 'production' -%>
bestbuy {
    ingestor {
        username = 'chub.test1'
        password = 'test'
        url = 'http://54.208.33.194/ingest-service/service'
    }
}
<% end -%>

marketplace.files.dailyBillingEventLocation = '<%= node['chub-buyspace']['files']['dailyBillingEventLocation'] %>' 
marketplace.files.hubPartnerStatisticsFile = '<%= node['chub-buyspace']['files']['hubPartnerStatisticsFile'] %>' 

beans {
    shiroSecurityManager {
        rememberMeManager = null
    }
}

forSaleImport {
    pendingDir = '<%= node['chub-buyspace']['forSaleImport']['pendingDir'] %>'
    inProgressDir = '<%= node['chub-buyspace']['forSaleImport']['inProgressDir'] %>'
    doneDir = '<%= node['chub-buyspace']['forSaleImport']['doneDir'] %>'
}

grails.plugin.excludes = {}

yui {
    seedUrl = '<%= node['chub-buyspace']['yui']['seedUrl'] %>'
    comboBase = '<%= node['chub-buyspace']['yui']['comboBase'] %>'
    filter = '<%= node['chub-buyspace']['yui']['filter'] %>'
    combine = <%= node['chub-buyspace']['yui']['combine'] %>
}

