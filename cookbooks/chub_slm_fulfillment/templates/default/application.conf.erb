#In order to use HOCON reserved characters or character sequences in an unquoted string (which enables substitutions),
#you can define variables to hold them. There is no escaping in unquoted strings.
#See https://github.com/typesafehub/config/blob/master/HOCON.md (section "Unquoted strings") to find out what is reserved.
eq: "="


resource.jdbc.slm_exceptions: {
    server: "<%= node[:chub_slm_fulfillment][:db_server] %>"   //may include :port
    dbname: "<%= node[:chub_slm_fulfillment][:exceptions_db_name] %>"
    user: "<%= node[:chub_slm_fulfillment][:db_user] %>"
    password: "<%= node[:chub_slm_fulfillment][:db_pass] %>"
    protocol: "jdbc:sqlserver://"
    location: ${resource.jdbc.slm_exceptions.protocol}${resource.jdbc.slm_exceptions.server};databaseName${eq}${resource.jdbc.slm_exceptions.dbname};user${eq}${resource.jdbc.slm_exceptions.user};password${eq}${resource.jdbc.slm_exceptions.password}
    class: com.microsoft.sqlserver.jdbc.SQLServerDriver
}

resource.jdbc.slm_intervals: {
    server: "<%= node[:chub_slm_fulfillment][:db_server] %>"   //may include :port
    dbname: "<%= node[:chub_slm_fulfillment][:intervals_db_name] %>"
    user: "<%= node[:chub_slm_fulfillment][:db_user] %>"
    password: "<%= node[:chub_slm_fulfillment][:db_pass] %>"
    protocol: "jdbc:sqlserver://"
    location: ${resource.jdbc.slm_intervals.protocol}${resource.jdbc.slm_intervals.server};databaseName${eq}${resource.jdbc.slm_intervals.dbname};user${eq}${resource.jdbc.slm_intervals.user};password${eq}${resource.jdbc.slm_intervals.password}
    class: com.microsoft.sqlserver.jdbc.SQLServerDriver
}

resource.jdbc.slm_measurements: {
    server: "<%= node[:chub_slm_fulfillment][:db_server] %>"   //may include :port
    dbname: "<%= node[:chub_slm_fulfillment][:measurements_db_name] %>"
    user: "<%= node[:chub_slm_fulfillment][:db_user] %>"
    password: "<%= node[:chub_slm_fulfillment][:db_pass] %>"
    protocol: "jdbc:sqlserver://"
    location: ${resource.jdbc.slm_measurements.protocol}${resource.jdbc.slm_measurements.server};databaseName${eq}${resource.jdbc.slm_measurements.dbname};user${eq}${resource.jdbc.slm_measurements.user};password${eq}${resource.jdbc.slm_measurements.password}
    class: com.microsoft.sqlserver.jdbc.SQLServerDriver
}

kafka.consumer: {
    zookeeper.connect: "pubsub01:2181,pubsub02:2181,pubsub03:2181"
    group.id: SLM-Fulfillment
    topic: orderEvents3
    num-threads: 1
    zookeeper.session.timeout.ms: 400
    zookeeper.sync.time.ms: 200
    auto.commit.interval.ms: 1000
}

clock: {
    class: com.commercehub.slm.engine.deadline.SystemClock
    #class: com.commercehub.slm.engine.deadline.ArtificialClock
    #step: 1h
    #rate: 1s
    #startTime: "2014-01-01T00:00:00-05:00"
}