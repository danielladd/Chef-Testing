# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure("2") do |config|
	config.vm.box = "precise64"
	config.vm.box_url = "http://files.vagrantup.com/precise64.box"
#	config.vm.provider :virtualbox do |vb|
#		vb.customize ["modifyvm", :id, "--memory", 512]
#	end

	config.vm.define "MISSION CONTROL APP SERVER" do |box1|
		box1.vm.hostname = "mc1"
		box1.vm.network :private_network, ip: "192.168.14.11"
		box1.vm.network :forwarded_port, guest: 8080, host: 8080
		box1.vm.network :forwarded_port, guest: 443, host: 8443
		box1.vm.provision :shell, :path => "install_chef.sh"
		box1.vm.provision "chef_solo" do |chef|
			chef.cookbooks_path = "D:/chef/cookbooks/"
 			####################################################################
			# In chef you can check for Vagrantness with:
			#	 if node[:instance_role] == 'vagrant'
			#		# do something that should only be done inside
			#		# a Vagrant box
			#	 end
 			####################################################################
			chef.json = {
				'instance_role' => 'vagrant',
				'tomcat' => {
					'base_version' => 7,
					'loglevel' => 'WARN',
					'keystore_password' => 'throwawaypassword',
					'truststore_password' => 'throwawaypassword'
				},
				'chub-onboarder' => {
					'app' =>  { 'bamboo_server_build_key'  => 'ONB',
								'bamboo_server_artifact'  => 'Onboarder-App',
								'bamboo_server_artifact_file_name'  => 'onboarder.war',
								'app_name' => 'onboarder'
					}
				},
				"ulimit" => {
					"users" => {
						"mongodb" => {
							"filehandle_limit" => 64000,
							"process_limit" => 32000,
							"memory_limit" => "unlimited"
						},
						"root" => {
							"filehandle_limit" => 64000,
							"process_limit" => 32000,
							"memory_limit" => "unlimited"
						}
					}
				},
				"mongodb" => {
					"enable_rest" => true,
					"dbpath" => "/data/db"
				}
			}
			chef.add_recipe "base"
			chef.add_recipe "python"
			chef.add_recipe "ulimit"
			chef.add_recipe "mongodb::10gen_repo"
			chef.add_recipe "mongodb"
			chef.add_recipe 'chub-onboarder'
		end
	end
end
