def logFile ="/var/log/commscontrolcenter/commscontrolcenter.log"
def stacktraceFile = "/var/log/commscontrolcenter/commscontrolcenter-stacktrace.log"


// environment specific settings
environments {
    
    development {
        dataSource {
            url = "jdbc:sqlserver://sqlvm82:1433;databaseName=qaftg02_sftp"
            username = 'regusr01'
            password = 'usrreg'
            logSql = false
        }
        dataSource_broadcaster {
            url = "jdbc:sqlserver://sqlvm82:1433;databaseName=qaftg02_ftg_vlt"
            username = 'regusr01'
            password = 'usrreg'
            logSql = false
        }
        dataSource_pf {
            url = "jdbc:sqlserver://sqlvm82:1433;databaseName=qaftg02_pathfinder"
            username = 'regusr01'
            password = 'usrreg'
            logSql = false
        }
        dataSource_chub {
            url = "jdbc:sqlserver://sqlvm82:1433;databaseName=qaftg02"
            username = 'regusr01'
            password = 'usrreg'
            logSql = false
        }
    }
    
    test {
        dataSource {
            url = "jdbc:sqlserver://sqlvm82:1433;databaseName=qaftg02_sftp"
            username = 'regusr01'
            password = 'usrreg'
            logSql = false
        }
        dataSource_broadcaster {
            url = "jdbc:sqlserver://sqlvm82:1433;databaseName=qaftg02_ftg_vlt"
            username = 'regusr01'
            password = 'usrreg'
            logSql = false
        }
        dataSource_pf {
            url = "jdbc:sqlserver://sqlvm82:1433;databaseName=qaftg02_pathfinder"
            username = 'regusr01'
            password = 'usrreg'
            logSql = false
        }
        dataSource_chub {
            url = "jdbc:sqlserver://sqlvm82:1433;databaseName=qaftg02"
            username = 'regusr01'
            password = 'usrreg'
            logSql = false
        }
    }

    production {
        dataSource {
            url = "jdbc:sqlserver://sqlvm82:1433;databaseName=qaftg02_sftp"
            username = 'regusr01'
            password = 'usrreg'
            logSql = false
        }
        dataSource_broadcaster {
            url = "jdbc:sqlserver://sqlvm82:1433;databaseName=qaftg02_ftg_vlt"
            username = 'regusr01'
            password = 'usrreg'
            logSql = false
        }
        dataSource_pf {
            url = "jdbc:sqlserver://sqlvm82:1433;databaseName=qaftg02_pathfinder"
            username = 'regusr01'
            password = 'usrreg'
            logSql = false
        }
        dataSource_chub {
            url = "jdbc:sqlserver://sqlvm82:1433;databaseName=qaftg02"
            username = 'regusr01'
            password = 'usrreg'
            logSql = false
        }
    }
}




// log4j configuration
log4j = {

    root {
        warn()
    }


    error 'org.codehaus.groovy.grails.web.servlet',        // controllers
            'org.codehaus.groovy.grails.web.pages',          // GSP
            'org.codehaus.groovy.grails.web.sitemesh',       // layouts
            'org.codehaus.groovy.grails.web.mapping.filter', // URL mapping
            'org.codehaus.groovy.grails.web.mapping',        // URL mapping
            'org.codehaus.groovy.grails.commons',            // core / classloading
            'org.codehaus.groovy.grails.plugins',            // plugins
            'org.codehaus.groovy.grails.orm.hibernate',      // hibernate integration
            'org.springframework',
            'org.hibernate',
            'net.sf.ehcache.hibernate'

    info "grails.app.controllers", "grails.app.domain", "grails.app.i18n",
            "grails.app.services", "grails.app.views"

    warn "grails.app.conf"

    appenders {

        console name:'stdout',
                layout:pattern(conversionPattern: '%d{dd-MM-yyyy HH:mm:ss,SSS} %5p %c{2} - %m%n')

        rollingFile name: "rollingFileAppender",
                maxFileSize: "10240KB",
                file:logFile,
                maxBackupIndex:10,
                layout:pattern(conversionPattern: '%d{dd-MM-yyyy HH:mm:ss,SSS} %5p %c{2} - %m%n')

        rollingFile name: "stacktrace",
                maxFileSize: "10240KB",
                file: stacktraceFile


    }
	
	root {
        warn  "rollingFileAppender", "stdout"
    }
  
}
